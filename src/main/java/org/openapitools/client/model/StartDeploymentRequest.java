/*
 * Amazon AppConfig
 * <p>Use AppConfig, a capability of Amazon Web Services Systems Manager, to create, manage, and quickly deploy application configurations. AppConfig supports controlled deployments to applications of any size and includes built-in validation checks and monitoring. You can use AppConfig with applications hosted on Amazon EC2 instances, Lambda, containers, mobile applications, or IoT devices.</p> <p>To prevent errors when deploying application configurations, especially for production systems where a simple typo could cause an unexpected outage, AppConfig includes validators. A validator provides a syntactic or semantic check to ensure that the configuration you want to deploy works as intended. To validate your application configuration data, you provide a schema or an Amazon Web Services Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.</p> <p>During a configuration deployment, AppConfig monitors the application to ensure that the deployment is successful. If the system encounters an error, AppConfig rolls back the change to minimize impact for your application users. You can configure a deployment strategy for each application or environment that includes deployment criteria, including velocity, bake time, and alarms to monitor. Similar to error monitoring, if a deployment triggers an alarm, AppConfig automatically rolls back to the previous version. </p> <p>AppConfig supports multiple use cases. Here are some examples:</p> <ul> <li> <p> <b>Feature flags</b>: Use AppConfig to turn on new features that require a timely deployment, such as a product launch or announcement. </p> </li> <li> <p> <b>Application tuning</b>: Use AppConfig to carefully introduce changes to your application that can only be tested with production traffic.</p> </li> <li> <p> <b>Allow list</b>: Use AppConfig to allow premium subscribers to access paid content. </p> </li> <li> <p> <b>Operational issues</b>: Use AppConfig to reduce stress on your application when a dependency or other external factor impacts the system.</p> </li> </ul> <p>This reference is intended to be used with the <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html\">AppConfig User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2019-10-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartDeploymentRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:42:19.346859+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class StartDeploymentRequest {
  public static final String SERIALIZED_NAME_DEPLOYMENT_STRATEGY_ID = "DeploymentStrategyId";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_STRATEGY_ID)
  @javax.annotation.Nonnull
  private String deploymentStrategyId;

  public static final String SERIALIZED_NAME_CONFIGURATION_PROFILE_ID = "ConfigurationProfileId";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_PROFILE_ID)
  @javax.annotation.Nonnull
  private String configurationProfileId;

  public static final String SERIALIZED_NAME_CONFIGURATION_VERSION = "ConfigurationVersion";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_VERSION)
  @javax.annotation.Nonnull
  private String configurationVersion;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Map<String, String> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_KMS_KEY_IDENTIFIER = "KmsKeyIdentifier";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_IDENTIFIER)
  @javax.annotation.Nullable
  private String kmsKeyIdentifier;

  public StartDeploymentRequest() {
  }

  public StartDeploymentRequest deploymentStrategyId(@javax.annotation.Nonnull String deploymentStrategyId) {
    this.deploymentStrategyId = deploymentStrategyId;
    return this;
  }

  /**
   * The deployment strategy ID.
   * @return deploymentStrategyId
   */
  @javax.annotation.Nonnull
  public String getDeploymentStrategyId() {
    return deploymentStrategyId;
  }

  public void setDeploymentStrategyId(@javax.annotation.Nonnull String deploymentStrategyId) {
    this.deploymentStrategyId = deploymentStrategyId;
  }


  public StartDeploymentRequest configurationProfileId(@javax.annotation.Nonnull String configurationProfileId) {
    this.configurationProfileId = configurationProfileId;
    return this;
  }

  /**
   * The configuration profile ID.
   * @return configurationProfileId
   */
  @javax.annotation.Nonnull
  public String getConfigurationProfileId() {
    return configurationProfileId;
  }

  public void setConfigurationProfileId(@javax.annotation.Nonnull String configurationProfileId) {
    this.configurationProfileId = configurationProfileId;
  }


  public StartDeploymentRequest configurationVersion(@javax.annotation.Nonnull String configurationVersion) {
    this.configurationVersion = configurationVersion;
    return this;
  }

  /**
   * The configuration version to deploy. If deploying an AppConfig hosted configuration version, you can specify either the version number or version label.
   * @return configurationVersion
   */
  @javax.annotation.Nonnull
  public String getConfigurationVersion() {
    return configurationVersion;
  }

  public void setConfigurationVersion(@javax.annotation.Nonnull String configurationVersion) {
    this.configurationVersion = configurationVersion;
  }


  public StartDeploymentRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * A description of the deployment.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public StartDeploymentRequest tags(@javax.annotation.Nullable Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public StartDeploymentRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Metadata to assign to the deployment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Map<String, String> tags) {
    this.tags = tags;
  }


  public StartDeploymentRequest kmsKeyIdentifier(@javax.annotation.Nullable String kmsKeyIdentifier) {
    this.kmsKeyIdentifier = kmsKeyIdentifier;
    return this;
  }

  /**
   * The KMS key identifier (key ID, key alias, or key ARN). AppConfig uses this ID to encrypt the configuration data using a customer managed key. 
   * @return kmsKeyIdentifier
   */
  @javax.annotation.Nullable
  public String getKmsKeyIdentifier() {
    return kmsKeyIdentifier;
  }

  public void setKmsKeyIdentifier(@javax.annotation.Nullable String kmsKeyIdentifier) {
    this.kmsKeyIdentifier = kmsKeyIdentifier;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartDeploymentRequest startDeploymentRequest = (StartDeploymentRequest) o;
    return Objects.equals(this.deploymentStrategyId, startDeploymentRequest.deploymentStrategyId) &&
        Objects.equals(this.configurationProfileId, startDeploymentRequest.configurationProfileId) &&
        Objects.equals(this.configurationVersion, startDeploymentRequest.configurationVersion) &&
        Objects.equals(this.description, startDeploymentRequest.description) &&
        Objects.equals(this.tags, startDeploymentRequest.tags) &&
        Objects.equals(this.kmsKeyIdentifier, startDeploymentRequest.kmsKeyIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deploymentStrategyId, configurationProfileId, configurationVersion, description, tags, kmsKeyIdentifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartDeploymentRequest {\n");
    sb.append("    deploymentStrategyId: ").append(toIndentedString(deploymentStrategyId)).append("\n");
    sb.append("    configurationProfileId: ").append(toIndentedString(configurationProfileId)).append("\n");
    sb.append("    configurationVersion: ").append(toIndentedString(configurationVersion)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    kmsKeyIdentifier: ").append(toIndentedString(kmsKeyIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DeploymentStrategyId");
    openapiFields.add("ConfigurationProfileId");
    openapiFields.add("ConfigurationVersion");
    openapiFields.add("Description");
    openapiFields.add("Tags");
    openapiFields.add("KmsKeyIdentifier");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DeploymentStrategyId");
    openapiRequiredFields.add("ConfigurationProfileId");
    openapiRequiredFields.add("ConfigurationVersion");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartDeploymentRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartDeploymentRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartDeploymentRequest is not found in the empty JSON string", StartDeploymentRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartDeploymentRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartDeploymentRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartDeploymentRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("DeploymentStrategyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DeploymentStrategyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DeploymentStrategyId").toString()));
      }
      if (!jsonObj.get("ConfigurationProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ConfigurationProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ConfigurationProfileId").toString()));
      }
      if (!jsonObj.get("ConfigurationVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ConfigurationVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ConfigurationVersion").toString()));
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("KmsKeyIdentifier") != null && !jsonObj.get("KmsKeyIdentifier").isJsonNull()) && !jsonObj.get("KmsKeyIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KmsKeyIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KmsKeyIdentifier").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartDeploymentRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartDeploymentRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartDeploymentRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartDeploymentRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartDeploymentRequest>() {
           @Override
           public void write(JsonWriter out, StartDeploymentRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartDeploymentRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartDeploymentRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartDeploymentRequest
   * @throws IOException if the JSON string is invalid with respect to StartDeploymentRequest
   */
  public static StartDeploymentRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartDeploymentRequest.class);
  }

  /**
   * Convert an instance of StartDeploymentRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

