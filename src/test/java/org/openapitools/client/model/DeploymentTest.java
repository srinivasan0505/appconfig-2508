/*
 * Amazon AppConfig
 * <p>Use AppConfig, a capability of Amazon Web Services Systems Manager, to create, manage, and quickly deploy application configurations. AppConfig supports controlled deployments to applications of any size and includes built-in validation checks and monitoring. You can use AppConfig with applications hosted on Amazon EC2 instances, Lambda, containers, mobile applications, or IoT devices.</p> <p>To prevent errors when deploying application configurations, especially for production systems where a simple typo could cause an unexpected outage, AppConfig includes validators. A validator provides a syntactic or semantic check to ensure that the configuration you want to deploy works as intended. To validate your application configuration data, you provide a schema or an Amazon Web Services Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.</p> <p>During a configuration deployment, AppConfig monitors the application to ensure that the deployment is successful. If the system encounters an error, AppConfig rolls back the change to minimize impact for your application users. You can configure a deployment strategy for each application or environment that includes deployment criteria, including velocity, bake time, and alarms to monitor. Similar to error monitoring, if a deployment triggers an alarm, AppConfig automatically rolls back to the previous version. </p> <p>AppConfig supports multiple use cases. Here are some examples:</p> <ul> <li> <p> <b>Feature flags</b>: Use AppConfig to turn on new features that require a timely deployment, such as a product launch or announcement. </p> </li> <li> <p> <b>Application tuning</b>: Use AppConfig to carefully introduce changes to your application that can only be tested with production traffic.</p> </li> <li> <p> <b>Allow list</b>: Use AppConfig to allow premium subscribers to access paid content. </p> </li> <li> <p> <b>Operational issues</b>: Use AppConfig to reduce stress on your application when a dependency or other external factor impacts the system.</p> </li> </ul> <p>This reference is intended to be used with the <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html\">AppConfig User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2019-10-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DeploymentState;
import org.openapitools.client.model.GrowthType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Deployment
 */
public class DeploymentTest {
    private final Deployment model = new Deployment();

    /**
     * Model tests for Deployment
     */
    @Test
    public void testDeployment() {
        // TODO: test Deployment
    }

    /**
     * Test the property 'applicationId'
     */
    @Test
    public void applicationIdTest() {
        // TODO: test applicationId
    }

    /**
     * Test the property 'environmentId'
     */
    @Test
    public void environmentIdTest() {
        // TODO: test environmentId
    }

    /**
     * Test the property 'deploymentStrategyId'
     */
    @Test
    public void deploymentStrategyIdTest() {
        // TODO: test deploymentStrategyId
    }

    /**
     * Test the property 'configurationProfileId'
     */
    @Test
    public void configurationProfileIdTest() {
        // TODO: test configurationProfileId
    }

    /**
     * Test the property 'deploymentNumber'
     */
    @Test
    public void deploymentNumberTest() {
        // TODO: test deploymentNumber
    }

    /**
     * Test the property 'configurationName'
     */
    @Test
    public void configurationNameTest() {
        // TODO: test configurationName
    }

    /**
     * Test the property 'configurationLocationUri'
     */
    @Test
    public void configurationLocationUriTest() {
        // TODO: test configurationLocationUri
    }

    /**
     * Test the property 'configurationVersion'
     */
    @Test
    public void configurationVersionTest() {
        // TODO: test configurationVersion
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'deploymentDurationInMinutes'
     */
    @Test
    public void deploymentDurationInMinutesTest() {
        // TODO: test deploymentDurationInMinutes
    }

    /**
     * Test the property 'growthType'
     */
    @Test
    public void growthTypeTest() {
        // TODO: test growthType
    }

    /**
     * Test the property 'growthFactor'
     */
    @Test
    public void growthFactorTest() {
        // TODO: test growthFactor
    }

    /**
     * Test the property 'finalBakeTimeInMinutes'
     */
    @Test
    public void finalBakeTimeInMinutesTest() {
        // TODO: test finalBakeTimeInMinutes
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'eventLog'
     */
    @Test
    public void eventLogTest() {
        // TODO: test eventLog
    }

    /**
     * Test the property 'percentageComplete'
     */
    @Test
    public void percentageCompleteTest() {
        // TODO: test percentageComplete
    }

    /**
     * Test the property 'startedAt'
     */
    @Test
    public void startedAtTest() {
        // TODO: test startedAt
    }

    /**
     * Test the property 'completedAt'
     */
    @Test
    public void completedAtTest() {
        // TODO: test completedAt
    }

    /**
     * Test the property 'appliedExtensions'
     */
    @Test
    public void appliedExtensionsTest() {
        // TODO: test appliedExtensions
    }

    /**
     * Test the property 'kmsKeyArn'
     */
    @Test
    public void kmsKeyArnTest() {
        // TODO: test kmsKeyArn
    }

    /**
     * Test the property 'kmsKeyIdentifier'
     */
    @Test
    public void kmsKeyIdentifierTest() {
        // TODO: test kmsKeyIdentifier
    }

}
