openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Use AppConfig, a capability of Amazon Web Services Systems Manager,\
    \ to create, manage, and quickly deploy application configurations. AppConfig\
    \ supports controlled deployments to applications of any size and includes built-in\
    \ validation checks and monitoring. You can use AppConfig with applications hosted\
    \ on Amazon EC2 instances, Lambda, containers, mobile applications, or IoT devices.</p>\
    \ <p>To prevent errors when deploying application configurations, especially for\
    \ production systems where a simple typo could cause an unexpected outage, AppConfig\
    \ includes validators. A validator provides a syntactic or semantic check to ensure\
    \ that the configuration you want to deploy works as intended. To validate your\
    \ application configuration data, you provide a schema or an Amazon Web Services\
    \ Lambda function that runs against the configuration. The configuration deployment\
    \ or update can only proceed when the configuration data is valid.</p> <p>During\
    \ a configuration deployment, AppConfig monitors the application to ensure that\
    \ the deployment is successful. If the system encounters an error, AppConfig rolls\
    \ back the change to minimize impact for your application users. You can configure\
    \ a deployment strategy for each application or environment that includes deployment\
    \ criteria, including velocity, bake time, and alarms to monitor. Similar to error\
    \ monitoring, if a deployment triggers an alarm, AppConfig automatically rolls\
    \ back to the previous version. </p> <p>AppConfig supports multiple use cases.\
    \ Here are some examples:</p> <ul> <li> <p> <b>Feature flags</b>: Use AppConfig\
    \ to turn on new features that require a timely deployment, such as a product\
    \ launch or announcement. </p> </li> <li> <p> <b>Application tuning</b>: Use AppConfig\
    \ to carefully introduce changes to your application that can only be tested with\
    \ production traffic.</p> </li> <li> <p> <b>Allow list</b>: Use AppConfig to allow\
    \ premium subscribers to access paid content. </p> </li> <li> <p> <b>Operational\
    \ issues</b>: Use AppConfig to reduce stress on your application when a dependency\
    \ or other external factor impacts the system.</p> </li> </ul> <p>This reference\
    \ is intended to be used with the <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html\"\
    >AppConfig User Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon AppConfig
  version: 2019-10-09
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: appconfig
  x-aws-signingName: appconfig
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appconfig-2019-10-09.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/appconfig/
servers:
- description: The AppConfig multi-region endpoint
  url: "http://appconfig.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AppConfig multi-region endpoint
  url: "https://appconfig.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AppConfig endpoint for China (Beijing) and China (Ningxia)
  url: "http://appconfig.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AppConfig endpoint for China (Beijing) and China (Ningxia)
  url: "https://appconfig.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /applications:
    get:
      description: Lists all applications in your Amazon Web Services account.
      operationId: ListApplications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of items to return for this call. The call
          also returns a token that you can specify in a subsequent call to get the
          next set of results.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: "A token to start the list. Next token is a pagination token\
          \ generated by AppConfig to describe what page the previous List call ended\
          \ on. For the first List request, the nextToken should not be set. On subsequent\
          \ calls, the nextToken parameter should be set to the previous responses\
          \ nextToken value. Use this token to get the next set of results. "
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "Creates an application. In AppConfig, an application is simply\
        \ an organizational construct like a folder. This organizational construct\
        \ has a relationship with some unit of executable code. For example, you could\
        \ create an application called MyMobileApp to organize and manage configuration\
        \ data for a mobile application installed by your users."
      operationId: CreateApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /applications/{ApplicationId}/configurationprofiles:
    get:
      description: Lists the configuration profiles for an application.
      operationId: ListConfigurationProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The maximum number of items to return for this call. The call
          also returns a token that you can specify in a subsequent call to get the
          next set of results.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: A token to start the list. Use this token to get the next set
          of results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: A filter based on the type of configurations that the configuration
          profile contains. A configuration can be a feature flag or a freeform configuration.
        explode: true
        in: query
        name: type
        required: false
        schema:
          pattern: "^[a-zA-Z\\.]+"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfiles'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a configuration profile, which is information that\
        \ enables AppConfig to access the configuration source. Valid configuration\
        \ sources include the following:</p> <ul> <li> <p>Configuration data in YAML,\
        \ JSON, and other formats stored in the AppConfig hosted configuration store</p>\
        \ </li> <li> <p>Configuration data stored as objects in an Amazon Simple Storage\
        \ Service (Amazon S3) bucket</p> </li> <li> <p>Pipelines stored in CodePipeline</p>\
        \ </li> <li> <p>Secrets stored in Secrets Manager</p> </li> <li> <p>Standard\
        \ and secure string parameters stored in Amazon Web Services Systems Manager\
        \ Parameter Store</p> </li> <li> <p>Configuration data in SSM documents stored\
        \ in the Systems Manager document store</p> </li> </ul> <p>A configuration\
        \ profile includes the following information:</p> <ul> <li> <p>The URI location\
        \ of the configuration data.</p> </li> <li> <p>The Identity and Access Management\
        \ (IAM) role that provides access to the configuration data.</p> </li> <li>\
        \ <p>A validator for the configuration data. Available validators include\
        \ either a JSON Schema or an Amazon Web Services Lambda function.</p> </li>\
        \ </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-configuration-and-profile.html\"\
        >Create a Configuration and a Configuration Profile</a> in the <i>AppConfig\
        \ User Guide</i>.</p>"
      operationId: CreateConfigurationProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationProfile_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfile'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /deploymentstrategies:
    get:
      description: Lists deployment strategies.
      operationId: ListDeploymentStrategies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of items to return for this call. The call
          also returns a token that you can specify in a subsequent call to get the
          next set of results.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: A token to start the list. Use this token to get the next set
          of results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStrategies'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "Creates a deployment strategy that defines important criteria\
        \ for rolling out your configuration to the designated targets. A deployment\
        \ strategy includes the overall duration required, a percentage of targets\
        \ to receive the deployment during each interval, an algorithm that defines\
        \ how percentage grows, and bake time."
      operationId: CreateDeploymentStrategy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeploymentStrategy_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStrategy'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /applications/{ApplicationId}/environments:
    get:
      description: Lists the environments for an application.
      operationId: ListEnvironments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The maximum number of items to return for this call. The call
          also returns a token that you can specify in a subsequent call to get the
          next set of results.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: A token to start the list. Use this token to get the next set
          of results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environments'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "Creates an environment. For each application, you define one or\
        \ more environments. An environment is a deployment group of AppConfig targets,\
        \ such as applications in a <code>Beta</code> or <code>Production</code> environment.\
        \ You can also define environments for application subcomponents such as the\
        \ <code>Web</code>, <code>Mobile</code> and <code>Back-end</code> components\
        \ for your application. You can configure Amazon CloudWatch alarms for each\
        \ environment. The system monitors alarms during a configuration deployment.\
        \ If an alarm is triggered, the system rolls back the configuration."
      operationId: CreateEnvironment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironment_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /extensions:
    get:
      description: "Lists all custom and Amazon Web Services authored AppConfig extensions\
        \ in the account. For more information about extensions, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\"\
        >Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>."
      operationId: ListExtensions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of items to return for this call. The call
          also returns a token that you can specify in a subsequent call to get the
          next set of results.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: 'A token to start the list. Use this token to get the next set
          of results. '
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The extension name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extensions'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates an AppConfig extension. An extension augments your\
        \ ability to inject logic or behavior at different points during the AppConfig\
        \ workflow of creating or deploying a configuration.</p> <p>You can create\
        \ your own extensions or use the Amazon Web Services authored extensions provided\
        \ by AppConfig. For most use cases, to create your own extension, you must\
        \ create an Lambda function to perform any computation and processing defined\
        \ in the extension. For more information about extensions, see <a href=\"\
        https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\"\
        >Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>"
      operationId: CreateExtension
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "You can omit this field when you create an extension. When you\
          \ create a new version, specify the most recent current version number.\
          \ For example, you create version 3, enter 2 for this field."
        explode: false
        in: header
        name: Latest-Version-Number
        required: false
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtension_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /extensionassociations:
    get:
      description: "Lists all AppConfig extension associations in the account. For\
        \ more information about extensions and associations, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\"\
        >Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>."
      operationId: ListExtensionAssociations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The ARN of an application, configuration profile, or environment."
        explode: true
        in: query
        name: resource_identifier
        required: false
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
            d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+"
          type: string
        style: form
      - description: "The name, the ID, or the Amazon Resource Name (ARN) of the extension."
        explode: true
        in: query
        name: extension_identifier
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The version number for the extension defined in the association.
        explode: true
        in: query
        name: extension_version_number
        required: false
        schema:
          type: integer
        style: form
      - description: The maximum number of items to return for this call. The call
          also returns a token that you can specify in a subsequent call to get the
          next set of results.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: 'A token to start the list. Use this token to get the next set
          of results or pass null to get the first set of results. '
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionAssociations'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: "When you create an extension or configure an Amazon Web Services\
        \ authored extension, you associate the extension with an AppConfig application,\
        \ environment, or configuration profile. For example, you can choose to run\
        \ the <code>AppConfig deployment events to Amazon SNS</code> Amazon Web Services\
        \ authored extension and receive notifications on an Amazon SNS topic anytime\
        \ a configuration deployment is started for a specific application. Defining\
        \ which extension to associate with an AppConfig resource is called an <i>extension\
        \ association</i>. An extension association is a specified relationship between\
        \ an extension and an AppConfig resource, such as an application or a configuration\
        \ profile. For more information about extensions and associations, see <a\
        \ href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\"\
        >Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>."
      operationId: CreateExtensionAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtensionAssociation_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionAssociation'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions#Content-Type:
    post:
      description: Creates a new configuration in the AppConfig hosted configuration
        store.
      operationId: CreateHostedConfigurationVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The configuration profile ID.
        explode: false
        in: path
        name: ConfigurationProfileId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: A description of the configuration.
        explode: false
        in: header
        name: Description
        required: false
        schema:
          maxLength: 1024
          minLength: 0
          type: string
        style: simple
      - description: "A standard MIME type describing the format of the configuration\
          \ content. For more information, see <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\"\
          >Content-Type</a>."
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: "An optional locking token used to prevent race conditions from\
          \ overwriting configuration updates when creating a new version. To ensure\
          \ your data is not overwritten when creating multiple hosted configuration\
          \ versions in rapid succession, specify the version number of the latest\
          \ hosted configuration version."
        explode: false
        in: header
        name: Latest-Version-Number
        required: false
        schema:
          type: integer
        style: simple
      - description: "An optional, user-defined label for the AppConfig hosted configuration\
          \ version. This value must contain at least one non-numeric character. For\
          \ example, \"v2.2.0\"."
        explode: false
        in: header
        name: VersionLabel
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: ".*[^0-9].*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHostedConfigurationVersion_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedConfigurationVersion'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /applications/{ApplicationId}:
    delete:
      description: Deletes an application. Deleting an application does not delete
        a configuration from a host.
      operationId: DeleteApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application to delete.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about an application.
      operationId: GetApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application you want to get.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    patch:
      description: Updates an application.
      operationId: UpdateApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}:
    delete:
      description: Deletes a configuration profile. Deleting a configuration profile
        does not delete a configuration from a host.
      operationId: DeleteConfigurationProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID that includes the configuration profile you
          want to delete.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The ID of the configuration profile you want to delete.
        explode: false
        in: path
        name: ConfigurationProfileId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about a configuration profile.
      operationId: GetConfigurationProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application that includes the configuration profile
          you want to get.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The ID of the configuration profile that you want to get.
        explode: false
        in: path
        name: ConfigurationProfileId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfile'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    patch:
      description: Updates a configuration profile.
      operationId: UpdateConfigurationProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The ID of the configuration profile.
        explode: false
        in: path
        name: ConfigurationProfileId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigurationProfile_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationProfile'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /deployementstrategies/{DeploymentStrategyId}:
    delete:
      description: Deletes a deployment strategy. Deleting a deployment strategy does
        not delete a configuration from a host.
      operationId: DeleteDeploymentStrategy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the deployment strategy you want to delete.
        explode: false
        in: path
        name: DeploymentStrategyId
        required: true
        schema:
          pattern: "(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /applications/{ApplicationId}/environments/{EnvironmentId}:
    delete:
      description: Deletes an environment. Deleting an environment does not delete
        a configuration from a host.
      operationId: DeleteEnvironment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID that includes the environment that you want
          to delete.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The ID of the environment that you want to delete.
        explode: false
        in: path
        name: EnvironmentId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    get:
      description: "Retrieves information about an environment. An environment is\
        \ a deployment group of AppConfig applications, such as applications in a\
        \ <code>Production</code> environment or in an <code>EU_Region</code> environment.\
        \ Each configuration deployment targets an environment. You can enable one\
        \ or more Amazon CloudWatch alarms for an environment. If an alarm is triggered\
        \ during a deployment, AppConfig roles back the configuration."
      operationId: GetEnvironment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application that includes the environment you want
          to get.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The ID of the environment that you want to get.
        explode: false
        in: path
        name: EnvironmentId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    patch:
      description: Updates an environment.
      operationId: UpdateEnvironment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The environment ID.
        explode: false
        in: path
        name: EnvironmentId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /extensions/{ExtensionIdentifier}:
    delete:
      description: Deletes an AppConfig extension. You must delete all associations
        to an extension before you delete the extension.
      operationId: DeleteExtension
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name, ID, or Amazon Resource Name (ARN) of the extension\
          \ you want to delete."
        explode: false
        in: path
        name: ExtensionIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: simple
      - description: "A specific version of an extension to delete. If omitted, the\
          \ highest version is deleted."
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    get:
      description: Returns information about an AppConfig extension.
      operationId: GetExtension
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name, the ID, or the Amazon Resource Name (ARN) of the extension."
        explode: false
        in: path
        name: ExtensionIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: simple
      - description: "The extension version number. If no version number was defined,\
          \ AppConfig uses the highest version."
        explode: true
        in: query
        name: version_number
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    patch:
      description: "Updates an AppConfig extension. For more information about extensions,\
        \ see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\"\
        >Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>."
      operationId: UpdateExtension
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name, the ID, or the Amazon Resource Name (ARN) of the extension."
        explode: false
        in: path
        name: ExtensionIdentifier
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExtension_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /extensionassociations/{ExtensionAssociationId}:
    delete:
      description: Deletes an extension association. This action doesn't delete extensions
        defined in the association.
      operationId: DeleteExtensionAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the extension association to delete.
        explode: false
        in: path
        name: ExtensionAssociationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    get:
      description: "Returns information about an AppConfig extension association.\
        \ For more information about extensions and associations, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\"\
        >Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>."
      operationId: GetExtensionAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The extension association ID to get.
        explode: false
        in: path
        name: ExtensionAssociationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionAssociation'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      description: "Updates an association. For more information about extensions\
        \ and associations, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\"\
        >Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>."
      operationId: UpdateExtensionAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The system-generated ID for the association.
        explode: false
        in: path
        name: ExtensionAssociationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExtensionAssociation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionAssociation'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions/{VersionNumber}:
    delete:
      description: Deletes a version of a configuration from the AppConfig hosted
        configuration store.
      operationId: DeleteHostedConfigurationVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The configuration profile ID.
        explode: false
        in: path
        name: ConfigurationProfileId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The versions number to delete.
        explode: false
        in: path
        name: VersionNumber
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about a specific configuration version.
      operationId: GetHostedConfigurationVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The configuration profile ID.
        explode: false
        in: path
        name: ConfigurationProfileId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The version.
        explode: false
        in: path
        name: VersionNumber
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedConfigurationVersion'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /applications/{Application}/environments/{Environment}/configurations/{Configuration}#client_id:
    get:
      deprecated: true
      description: "<p>(Deprecated) Retrieves the latest deployed configuration.</p>\
        \ <important> <p>Note the following important information.</p> <ul> <li> <p>This\
        \ API action is deprecated. Calls to receive configuration data should use\
        \ the <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_StartConfigurationSession.html\"\
        >StartConfigurationSession</a> and <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html\"\
        >GetLatestConfiguration</a> APIs instead. </p> </li> <li> <p> <code>GetConfiguration</code>\
        \ is a priced call. For more information, see <a href=\"https://aws.amazon.com/systems-manager/pricing/\"\
        >Pricing</a>.</p> </li> </ul> </important>"
      operationId: GetConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application to get. Specify either the application name or
          the application ID.
        explode: false
        in: path
        name: Application
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The environment to get. Specify either the environment name or
          the environment ID.
        explode: false
        in: path
        name: Environment
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: The configuration to get. Specify either the configuration name
          or the configuration ID.
        explode: false
        in: path
        name: Configuration
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      - description: "The clientId parameter in the following command is a unique,\
          \ user-specified ID to identify the client for the configuration. This ID\
          \ enables AppConfig to deploy the configuration in intervals, as defined\
          \ in the deployment strategy. "
        explode: true
        in: query
        name: client_id
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      - description: "<p>The configuration version returned in the most recent <code>GetConfiguration</code>\
          \ response.</p> <important> <p>AppConfig uses the value of the <code>ClientConfigurationVersion</code>\
          \ parameter to identify the configuration version on your clients. If you\
          \ don’t send <code>ClientConfigurationVersion</code> with each call to <code>GetConfiguration</code>,\
          \ your clients receive the current configuration. You are charged each time\
          \ your clients receive a configuration.</p> <p>To avoid excess charges,\
          \ we recommend you use the <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/StartConfigurationSession.html\"\
          >StartConfigurationSession</a> and <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/GetLatestConfiguration.html\"\
          >GetLatestConfiguration</a> APIs, which track the client configuration version\
          \ on your behalf. If you choose to continue using <code>GetConfiguration</code>,\
          \ we recommend that you include the <code>ClientConfigurationVersion</code>\
          \ value with every call to <code>GetConfiguration</code>. The value to use\
          \ for <code>ClientConfigurationVersion</code> comes from the <code>ConfigurationVersion</code>\
          \ attribute returned by <code>GetConfiguration</code> when there is new\
          \ or updated data, and should be saved for subsequent calls to <code>GetConfiguration</code>.</p>\
          \ </important> <p>For more information about working with configurations,\
          \ see <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-retrieving-the-configuration.html\"\
          >Retrieving the Configuration</a> in the <i>AppConfig User Guide</i>.</p>"
        explode: true
        in: query
        name: client_configuration_version
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /applications/{ApplicationId}/environments/{EnvironmentId}/deployments/{DeploymentNumber}:
    delete:
      description: Stops a deployment. This API action works only on deployments that
        have a status of <code>DEPLOYING</code>. This action moves the deployment
        to a status of <code>ROLLED_BACK</code>.
      operationId: StopDeployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The environment ID.
        explode: false
        in: path
        name: EnvironmentId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The sequence number of the deployment.
        explode: false
        in: path
        name: DeploymentNumber
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about a configuration deployment.
      operationId: GetDeployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The ID of the application that includes the deployment you want
          to get. '
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: 'The ID of the environment that includes the deployment you want
          to get. '
        explode: false
        in: path
        name: EnvironmentId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The sequence number of the deployment.
        explode: false
        in: path
        name: DeploymentNumber
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
  /deploymentstrategies/{DeploymentStrategyId}:
    get:
      description: "Retrieves information about a deployment strategy. A deployment\
        \ strategy defines important criteria for rolling out your configuration to\
        \ the designated targets. A deployment strategy includes the overall duration\
        \ required, a percentage of targets to receive the deployment during each\
        \ interval, an algorithm that defines how percentage grows, and bake time."
      operationId: GetDeploymentStrategy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the deployment strategy to get.
        explode: false
        in: path
        name: DeploymentStrategyId
        required: true
        schema:
          pattern: "(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStrategy'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    patch:
      description: Updates a deployment strategy.
      operationId: UpdateDeploymentStrategy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The deployment strategy ID.
        explode: false
        in: path
        name: DeploymentStrategyId
        required: true
        schema:
          pattern: "(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeploymentStrategy_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStrategy'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /applications/{ApplicationId}/environments/{EnvironmentId}/deployments:
    get:
      description: Lists the deployments for an environment in descending deployment
        number order.
      operationId: ListDeployments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The environment ID.
        explode: false
        in: path
        name: EnvironmentId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: "The maximum number of items that may be returned for this call.\
          \ If there are items that have not yet been returned, the response will\
          \ include a non-null <code>NextToken</code> that you can provide in a subsequent\
          \ call to get the next set of results."
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: "The token returned by a prior call to this operation indicating\
          \ the next set of results to be returned. If not specified, the operation\
          \ will return the first set of results."
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployments'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-accepts:
      - application/json
    post:
      description: Starts a deployment.
      operationId: StartDeployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The environment ID.
        explode: false
        in: path
        name: EnvironmentId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDeployment_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions:
    get:
      description: Lists configurations stored in the AppConfig hosted configuration
        store by version.
      operationId: ListHostedConfigurationVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The configuration profile ID.
        explode: false
        in: path
        name: ConfigurationProfileId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The maximum number of items to return for this call. The call
          also returns a token that you can specify in a subsequent call to get the
          next set of results.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: 'A token to start the list. Use this token to get the next set
          of results. '
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: "An optional filter that can be used to specify the version label\
          \ of an AppConfig hosted configuration version. This parameter supports\
          \ filtering by prefix using a wildcard, for example \"v2*\". If you don't\
          \ specify an asterisk at the end of the value, only an exact match is returned."
        explode: true
        in: query
        name: version_label
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedConfigurationVersions'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /tags/{ResourceArn}:
    get:
      description: Retrieves the list of key-value tags assigned to the resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource ARN.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
            d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTags'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    post:
      description: "Assigns metadata to an AppConfig resource. Tags help organize\
        \ and categorize your AppConfig resources. Each tag consists of a key and\
        \ an optional value, both of which you define. You can specify a maximum of\
        \ 50 tags for a resource."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource for which to retrieve tags.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
            d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{ResourceArn}#tagKeys:
    delete:
      description: Deletes a tag key and value from an AppConfig resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource for which to remove tags.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
            d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+"
          type: string
        style: simple
      - description: The tag keys to delete.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/validators#configuration_version:
    post:
      description: Uses the validators in a configuration profile to validate a configuration.
      operationId: ValidateConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The application ID.
        explode: false
        in: path
        name: ApplicationId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The configuration profile ID.
        explode: false
        in: path
        name: ConfigurationProfileId
        required: true
        schema:
          pattern: "[a-z0-9]{4,7}"
          type: string
        style: simple
      - description: The version of the configuration to validate.
        explode: true
        in: query
        name: configuration_version
        required: true
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    Application:
      example:
        Description: An application used for creating an example.
        Id: 339ohji
        Name: Example-Application
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The application ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The application name.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the application.
      type: object
    TagValue:
      maxLength: 256
      type: string
    BadRequestException: {}
    InternalServerException: {}
    ConfigurationProfile:
      example:
        ApplicationId: 339ohji
        Description: Configuration profile used for examples.
        Id: ur8hx2f
        LocationUri: ssm-parameter://Example-Parameter
        Name: Example-Configuration-Profile
        RetrievalRoleArn: arn:aws:iam::111122223333:role/Example-App-Config-Role
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The application ID.
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The configuration profile ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/LongName'
          - description: The name of the configuration profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The configuration profile description.
        LocationUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: The URI location of the configuration.
        RetrievalRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of an IAM role with permission to access the configuration
              at the specified <code>LocationUri</code>.
        Validators:
          allOf:
          - $ref: '#/components/schemas/ValidatorList'
          - description: A list of methods for validating the configuration.
        Type:
          allOf:
          - $ref: '#/components/schemas/ConfigurationProfileType'
          - description: "<p>The type of configurations contained in the profile.\
              \ AppConfig supports <code>feature flags</code> and <code>freeform</code>\
              \ configurations. We recommend you create feature flag configurations\
              \ to enable or disable new features and freeform configurations to distribute\
              \ configurations to an application. When calling this API, enter one\
              \ of the following values for <code>Type</code>:</p> <p> <code>AWS.AppConfig.FeatureFlags</code>\
              \ </p> <p> <code>AWS.Freeform</code> </p>"
      type: object
    Validator:
      description: "A validator provides a syntactic or semantic check to ensure the\
        \ configuration that you want to deploy functions as intended. To validate\
        \ your application configuration data, you provide a schema or an Amazon Web\
        \ Services Lambda function that runs against the configuration. The configuration\
        \ deployment or update can only proceed when the configuration data is valid."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ValidatorType'
          - description: 'AppConfig supports validators of type <code>JSON_SCHEMA</code>
              and <code>LAMBDA</code> '
        Content:
          allOf:
          - $ref: '#/components/schemas/StringWithLengthBetween0And32768'
          - description: Either the JSON Schema content or the Amazon Resource Name
              (ARN) of an Lambda function.
      required:
      - Content
      - Type
      type: object
    ResourceNotFoundException: {}
    DeploymentStrategy:
      example:
        DeploymentDurationInMinutes: 15
        FinalBakeTimeInMinutes: 20
        GrowthFactor: 25
        GrowthType: LINEAR
        Id: 1225qzk
        Name: Example-Deployment
        ReplicateTo: SSM_DOCUMENT
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The deployment strategy ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the deployment strategy.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the deployment strategy.
        DeploymentDurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: Total amount of time the deployment lasted.
        GrowthType:
          allOf:
          - $ref: '#/components/schemas/GrowthType'
          - description: The algorithm used to define how percentage grew over time.
        GrowthFactor:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of targets that received a deployed configuration
              during each interval.
        FinalBakeTimeInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: The amount of time that AppConfig monitored for alarms before
              considering the deployment to be complete and no longer eligible for
              automatic rollback.
        ReplicateTo:
          allOf:
          - $ref: '#/components/schemas/ReplicateTo'
          - description: Save the deployment strategy to a Systems Manager (SSM) document.
      type: object
    Environment:
      example:
        ApplicationId: 339ohji
        Description: An environment for examples.
        Id: 54j1r29
        Name: Example-Environment
        State: ROLLED_BACK
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The application ID.
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The environment ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the environment.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the environment.
        State:
          allOf:
          - $ref: '#/components/schemas/EnvironmentState'
          - description: "The state of the environment. An environment can be in one\
              \ of the following states: <code>READY_FOR_DEPLOYMENT</code>, <code>DEPLOYING</code>,\
              \ <code>ROLLING_BACK</code>, or <code>ROLLED_BACK</code> "
        Monitors:
          allOf:
          - $ref: '#/components/schemas/MonitorList'
          - description: Amazon CloudWatch alarms monitored during the deployment.
      type: object
    Monitor:
      description: Amazon CloudWatch alarms to monitor during the deployment process.
      properties:
        AlarmArn:
          allOf:
          - $ref: '#/components/schemas/StringWithLengthBetween1And2048'
          - description: Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.
        AlarmRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: ARN of an Identity and Access Management (IAM) role for AppConfig
              to monitor <code>AlarmArn</code>.
      required:
      - AlarmArn
      type: object
    Extension:
      example:
        Description: ""
        Parameters: ""
        Actions: ""
        Id: ""
        Arn: ""
        VersionNumber: ""
        Name: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The system-generated ID of the extension.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The extension name.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The extension version number.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The system-generated Amazon Resource Name (ARN) for the extension.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: Information about the extension.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionsMap'
          - description: The actions defined in the extension.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          - description: "The parameters accepted by the extension. You specify parameter\
              \ values when you associate the extension to an AppConfig resource by\
              \ using the <code>CreateExtensionAssociation</code> API action. For\
              \ Lambda extension actions, these parameters are included in the Lambda\
              \ request object."
      type: object
    ActionList:
      items:
        $ref: '#/components/schemas/Action'
      maxItems: 1
      minItems: 1
      type: array
    Parameter:
      description: "A value such as an Amazon Resource Name (ARN) or an Amazon Simple\
        \ Notification Service topic entered in an extension when invoked. Parameter\
        \ values are specified in an extension association. For more information about\
        \ extensions, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\"\
        >Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>."
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: Information about the parameter.
        Required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A parameter value must be specified in the extension association.
      type: object
    ConflictException: {}
    ServiceQuotaExceededException: {}
    ExtensionAssociation:
      example:
        ResourceArn: ""
        Parameters: ""
        ExtensionArn: ""
        Id: ""
        Arn: ""
        ExtensionVersionNumber: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The system-generated ID for the association.
        ExtensionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the extension defined in the association.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARNs of applications, configuration profiles, or environments\
              \ defined in the association."
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The system-generated Amazon Resource Name (ARN) for the extension.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterValueMap'
          - description: The parameter names and values defined in the association.
        ExtensionVersionNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The version number for the extension defined in the association.
      type: object
    StringWithLengthBetween1And2048:
      maxLength: 2048
      minLength: 1
      type: string
    HostedConfigurationVersion:
      example:
        ApplicationId: 339ohji
        ConfigurationProfileId: ur8hx2f
        ContentType: application/json
        VersionNumber: 1
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: The content of the configuration or the configuration data.
      type: object
    PayloadTooLargeException: {}
    Configuration:
      example:
        ConfigurationVersion: "1"
        ContentType: application/octet-stream
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: "<p>The content of the configuration or the configuration\
              \ data.</p> <important> <p>The <code>Content</code> attribute only contains\
              \ data if the system finds new or updated configuration data. If there\
              \ is no new or updated data and <code>ClientConfigurationVersion</code>\
              \ matches the version of the current configuration, AppConfig returns\
              \ a <code>204 No Content</code> HTTP response code and the <code>Content</code>\
              \ value will be empty.</p> </important>"
      type: object
    Deployment:
      example:
        DeploymentDurationInMinutes: 15
        DeploymentNumber: 2
        FinalBakeTimeInMinutes: 0
        GrowthFactor: 25
        PercentageComplete: 1
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The ID of the application that was deployed.
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The ID of the environment that was deployed.
        DeploymentStrategyId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The ID of the deployment strategy that was deployed.
        ConfigurationProfileId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The ID of the configuration profile that was deployed.
        DeploymentNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The sequence number of the deployment.
        ConfigurationName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the configuration.
        ConfigurationLocationUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: Information about the source location of the configuration.
        ConfigurationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The configuration version that was deployed.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the deployment.
        DeploymentDurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: Total amount of time the deployment lasted.
        GrowthType:
          allOf:
          - $ref: '#/components/schemas/GrowthType'
          - description: The algorithm used to define how percentage grew over time.
        GrowthFactor:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of targets to receive a deployed configuration
              during each interval.
        FinalBakeTimeInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: The amount of time that AppConfig monitored for alarms before
              considering the deployment to be complete and no longer eligible for
              automatic rollback.
        State:
          allOf:
          - $ref: '#/components/schemas/DeploymentState'
          - description: The state of the deployment.
        EventLog:
          allOf:
          - $ref: '#/components/schemas/DeploymentEvents'
          - description: A list containing all events related to a deployment. The
              most recent events are displayed first.
        PercentageComplete:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of targets for which the deployment is available.
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601DateTime'
          - description: The time the deployment started.
        CompletedAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601DateTime'
          - description: 'The time the deployment completed. '
        AppliedExtensions:
          allOf:
          - $ref: '#/components/schemas/AppliedExtensions'
          - description: "A list of extensions that were processed as part of the\
              \ deployment. The extensions that were previously associated to the\
              \ configuration profile, environment, or the application when <code>StartDeployment</code>\
              \ was called."
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name of the Key Management Service key\
              \ used to encrypt configuration data. You can encrypt secrets stored\
              \ in Secrets Manager, Amazon Simple Storage Service (Amazon S3) objects\
              \ encrypted with SSE-KMS, or secure string parameters stored in Amazon\
              \ Web Services Systems Manager Parameter Store. "
        KmsKeyIdentifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: "The KMS key identifier (key ID, key alias, or key ARN).\
              \ AppConfig uses this ID to encrypt the configuration data using a customer\
              \ managed key. "
      type: object
    Applications:
      example:
        Items:
        - Description: An application used for creating an example.
          Id: 339ohji
          Name: test-application
        - Id: rwalwu7
          Name: Test-Application
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ApplicationList'
          - description: The elements from this collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
      type: object
    ConfigurationProfiles:
      example:
        Items:
        - ApplicationId: 339ohji
          Id: ur8hx2f
          LocationUri: ssm-parameter://Example-Parameter
          Name: Example-Configuration-Profile
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ConfigurationProfileSummaryList'
          - description: The elements from this collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
      type: object
    DeploymentStrategies:
      example:
        Items:
        - DeploymentDurationInMinutes: 15
          FinalBakeTimeInMinutes: 0
          GrowthFactor: 25
          GrowthType: LINEAR
          Id: 1225qzk
          Name: Example-Deployment
          ReplicateTo: SSM_DOCUMENT
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/DeploymentStrategyList'
          - description: The elements from this collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
      type: object
    Deployments:
      example:
        Items:
        - CompletedAt: 2021-09-17T21:59:03.888000+00:00
          ConfigurationName: Example-Configuration-Profile
          ConfigurationVersion: "1"
          DeploymentDurationInMinutes: 15
          DeploymentNumber: 1
          FinalBakeTimeInMinutes: 0
          GrowthFactor: 25
          GrowthType: LINEAR
          PercentageComplete: 100
          StartedAt: 2021-09-17T21:43:54.205000+00:00
          State: COMPLETE
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/DeploymentList'
          - description: The elements from this collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
      type: object
    Environments:
      example:
        Items:
        - ApplicationId: 339ohji
          Id: 54j1r29
          Name: Example-Environment
          State: READY_FOR_DEPLOYMENT
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/EnvironmentList'
          - description: The elements from this collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
      type: object
    ExtensionAssociations:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ExtensionAssociationSummaries'
          - description: "The list of extension associations. Each item represents\
              \ an extension association to an application, environment, or configuration\
              \ profile. "
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
      type: object
    Extensions:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ExtensionSummaries'
          - description: The list of available extensions. The list includes Amazon
              Web Services authored and user-created extensions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
      type: object
    HostedConfigurationVersions:
      example:
        Items:
        - ApplicationId: 339ohji
          ConfigurationProfileId: ur8hx2f
          ContentType: application/json
          VersionNumber: 1
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/HostedConfigurationVersionSummaryList'
          - description: The elements from this collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
      type: object
    ResourceTags:
      example:
        Tags:
          group1: "1"
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Metadata to assign to AppConfig resources. Tags help organize\
              \ and categorize your AppConfig resources. Each tag consists of a key\
              \ and an optional value, both of which you define."
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    Name:
      maxLength: 64
      minLength: 1
      type: string
    Description:
      maxLength: 1024
      minLength: 0
      type: string
    Uri:
      maxLength: 2048
      minLength: 1
      type: string
    Arn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\\
        d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+"
      type: string
    Action:
      description: "<p>An action defines the tasks that the extension performs during\
        \ the AppConfig workflow. Each action includes an action point such as <code>ON_CREATE_HOSTED_CONFIGURATION</code>,\
        \ <code>PRE_DEPLOYMENT</code>, or <code>ON_DEPLOYMENT</code>. Each action\
        \ also includes a name, a URI to an Lambda function, and an Amazon Resource\
        \ Name (ARN) for an Identity and Access Management assume role. You specify\
        \ the name, URI, and ARN for each <i>action point</i> defined in the extension.\
        \ You can specify the following actions for an extension:</p> <ul> <li> <p>\
        \ <code>PRE_CREATE_HOSTED_CONFIGURATION_VERSION</code> </p> </li> <li> <p>\
        \ <code>PRE_START_DEPLOYMENT</code> </p> </li> <li> <p> <code>ON_DEPLOYMENT_START</code>\
        \ </p> </li> <li> <p> <code>ON_DEPLOYMENT_STEP</code> </p> </li> <li> <p>\
        \ <code>ON_DEPLOYMENT_BAKING</code> </p> </li> <li> <p> <code>ON_DEPLOYMENT_COMPLETE</code>\
        \ </p> </li> <li> <p> <code>ON_DEPLOYMENT_ROLLED_BACK</code> </p> </li> </ul>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The action name.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: Information about the action.
        Uri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The extension URI associated to the action point in the\
              \ extension definition. The URI can be an Amazon Resource Name (ARN)\
              \ for one of the following: an Lambda function, an Amazon Simple Queue\
              \ Service queue, an Amazon Simple Notification Service topic, or the\
              \ Amazon EventBridge default event bus."
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: An Amazon Resource Name (ARN) for an Identity and Access
              Management assume role.
      type: object
    Identifier:
      maxLength: 2048
      minLength: 1
      type: string
    String:
      type: string
    Id:
      pattern: "[a-z0-9]{4,7}"
      type: string
    ActionInvocation:
      description: An extension that was invoked as part of a deployment event.
      properties:
        ExtensionIdentifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: "The name, the ID, or the Amazon Resource Name (ARN) of the\
              \ extension."
        ActionName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the action.
        Uri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "The extension URI associated to the action point in the\
              \ extension definition. The URI can be an Amazon Resource Name (ARN)\
              \ for one of the following: an Lambda function, an Amazon Simple Queue\
              \ Service queue, an Amazon Simple Notification Service topic, or the\
              \ Amazon EventBridge default event bus."
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: An Amazon Resource Name (ARN) for an Identity and Access
              Management assume role.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message when an extension invocation fails.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error code when an extension invocation fails.
        InvocationId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A system-generated ID for this invocation.
      type: object
    ActionInvocations:
      items:
        $ref: '#/components/schemas/ActionInvocation'
      type: array
    ActionPoint:
      enum:
      - PRE_CREATE_HOSTED_CONFIGURATION_VERSION
      - PRE_START_DEPLOYMENT
      - ON_DEPLOYMENT_START
      - ON_DEPLOYMENT_STEP
      - ON_DEPLOYMENT_BAKING
      - ON_DEPLOYMENT_COMPLETE
      - ON_DEPLOYMENT_ROLLED_BACK
      type: string
    ActionsMap:
      additionalProperties:
        $ref: '#/components/schemas/ActionList'
      maxProperties: 5
      minProperties: 1
      type: object
    ApplicationList:
      items:
        $ref: '#/components/schemas/Application'
      type: array
    NextToken:
      maxLength: 2048
      minLength: 1
      type: string
    Integer:
      type: integer
    ParameterValueMap:
      additionalProperties:
        $ref: '#/components/schemas/StringWithLengthBetween1And2048'
      maxProperties: 5
      minProperties: 0
      type: object
    AppliedExtension:
      description: An extension that was invoked during a deployment.
      properties:
        ExtensionId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The system-generated ID of the extension.
        ExtensionAssociationId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The system-generated ID for the association.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The extension version number.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterValueMap'
          - description: One or more parameters for the actions called by the extension.
      type: object
    AppliedExtensions:
      items:
        $ref: '#/components/schemas/AppliedExtension'
      type: array
    Blob:
      format: password
      type: string
    Boolean:
      type: boolean
    Version:
      maxLength: 1024
      minLength: 1
      type: string
    LongName:
      maxLength: 128
      minLength: 1
      type: string
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\\
        d{12}:role[/].*)$"
      type: string
    ValidatorList:
      items:
        $ref: '#/components/schemas/Validator'
      maxItems: 2
      minItems: 0
      type: array
    ConfigurationProfileType:
      pattern: "^[a-zA-Z\\.]+"
      type: string
    ValidatorTypeList:
      items:
        $ref: '#/components/schemas/ValidatorType'
      maxItems: 2
      minItems: 0
      type: array
    ConfigurationProfileSummary:
      description: A summary of a configuration profile.
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The application ID.
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The ID of the configuration profile.
        Name:
          allOf:
          - $ref: '#/components/schemas/LongName'
          - description: The name of the configuration profile.
        LocationUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: The URI location of the configuration.
        ValidatorTypes:
          allOf:
          - $ref: '#/components/schemas/ValidatorTypeList'
          - description: The types of validators in the configuration profile.
        Type:
          allOf:
          - $ref: '#/components/schemas/ConfigurationProfileType'
          - description: "<p>The type of configurations contained in the profile.\
              \ AppConfig supports <code>feature flags</code> and <code>freeform</code>\
              \ configurations. We recommend you create feature flag configurations\
              \ to enable or disable new features and freeform configurations to distribute\
              \ configurations to an application. When calling this API, enter one\
              \ of the following values for <code>Type</code>:</p> <p> <code>AWS.AppConfig.FeatureFlags</code>\
              \ </p> <p> <code>AWS.Freeform</code> </p>"
      type: object
    ConfigurationProfileSummaryList:
      items:
        $ref: '#/components/schemas/ConfigurationProfileSummary'
      type: array
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    CreateApplicationRequest:
      example:
        Description: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the application.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the application.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Metadata to assign to the application. Tags help organize\
              \ and categorize your AppConfig resources. Each tag consists of a key\
              \ and an optional value, both of which you define."
      required:
      - Name
      title: CreateApplicationRequest
      type: object
    CreateConfigurationProfileRequest:
      example:
        LocationUri: ""
        Type: ""
        Description: ""
        Validators: ""
        RetrievalRoleArn: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/LongName'
          - description: A name for the configuration profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the configuration profile.
        LocationUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: "<p>A URI to locate the configuration. You can specify the\
              \ following:</p> <ul> <li> <p>For the AppConfig hosted configuration\
              \ store and for feature flags, specify <code>hosted</code>.</p> </li>\
              \ <li> <p>For an Amazon Web Services Systems Manager Parameter Store\
              \ parameter, specify either the parameter name in the format <code>ssm-parameter://&lt;parameter\
              \ name&gt;</code> or the ARN.</p> </li> <li> <p>For an Secrets Manager\
              \ secret, specify the URI in the following format: <code>secrets-manager</code>://&lt;secret\
              \ name&gt;.</p> </li> <li> <p>For an Amazon S3 object, specify the URI\
              \ in the following format: <code>s3://&lt;bucket&gt;/&lt;objectKey&gt;\
              \ </code>. Here is an example: <code>s3://my-bucket/my-app/us-east-1/my-config.json</code>\
              \ </p> </li> <li> <p>For an SSM document, specify either the document\
              \ name in the format <code>ssm-document://&lt;document name&gt;</code>\
              \ or the Amazon Resource Name (ARN).</p> </li> </ul>"
        RetrievalRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: <p>The ARN of an IAM role with permission to access the configuration
              at the specified <code>LocationUri</code>.</p> <important> <p>A retrieval
              role ARN is not required for configurations stored in the AppConfig
              hosted configuration store. It is required for all other sources that
              store your configuration. </p> </important>
        Validators:
          allOf:
          - $ref: '#/components/schemas/ValidatorList'
          - description: A list of methods for validating the configuration.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Metadata to assign to the configuration profile. Tags help\
              \ organize and categorize your AppConfig resources. Each tag consists\
              \ of a key and an optional value, both of which you define."
        Type:
          allOf:
          - $ref: '#/components/schemas/ConfigurationProfileType'
          - description: "<p>The type of configurations contained in the profile.\
              \ AppConfig supports <code>feature flags</code> and <code>freeform</code>\
              \ configurations. We recommend you create feature flag configurations\
              \ to enable or disable new features and freeform configurations to distribute\
              \ configurations to an application. When calling this API, enter one\
              \ of the following values for <code>Type</code>:</p> <p> <code>AWS.AppConfig.FeatureFlags</code>\
              \ </p> <p> <code>AWS.Freeform</code> </p>"
      required:
      - LocationUri
      - Name
      title: CreateConfigurationProfileRequest
      type: object
    MinutesBetween0And24Hours:
      maximum: 1440
      minimum: 0
      type: integer
    GrowthFactor:
      format: float
      maximum: 100
      minimum: 1
      type: number
    GrowthType:
      enum:
      - LINEAR
      - EXPONENTIAL
      type: string
    ReplicateTo:
      enum:
      - NONE
      - SSM_DOCUMENT
      type: string
    CreateDeploymentStrategyRequest:
      example:
        ReplicateTo: ""
        GrowthType: ""
        Description: ""
        DeploymentDurationInMinutes: ""
        GrowthFactor: ""
        FinalBakeTimeInMinutes: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the deployment strategy.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the deployment strategy.
        DeploymentDurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: Total amount of time for a deployment to last.
        FinalBakeTimeInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: "Specifies the amount of time AppConfig monitors for Amazon\
              \ CloudWatch alarms after the configuration has been deployed to 100%\
              \ of its targets, before considering the deployment to be complete.\
              \ If an alarm is triggered during this time, AppConfig rolls back the\
              \ deployment. You must configure permissions for AppConfig to roll back\
              \ based on CloudWatch alarms. For more information, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/getting-started-with-appconfig-cloudwatch-alarms-permissions.html\"\
              >Configuring permissions for rollback based on Amazon CloudWatch alarms</a>\
              \ in the <i>AppConfig User Guide</i>."
        GrowthFactor:
          allOf:
          - $ref: '#/components/schemas/GrowthFactor'
          - description: The percentage of targets to receive a deployed configuration
              during each interval.
        GrowthType:
          allOf:
          - $ref: '#/components/schemas/GrowthType'
          - description: "<p>The algorithm used to define how percentage grows over\
              \ time. AppConfig supports the following growth types:</p> <p> <b>Linear</b>:\
              \ For this type, AppConfig processes the deployment by dividing the\
              \ total number of targets by the value specified for <code>Step percentage</code>.\
              \ For example, a linear deployment that uses a <code>Step percentage</code>\
              \ of 10 deploys the configuration to 10 percent of the hosts. After\
              \ those deployments are complete, the system deploys the configuration\
              \ to the next 10 percent. This continues until 100% of the targets have\
              \ successfully received the configuration.</p> <p> <b>Exponential</b>:\
              \ For this type, AppConfig processes the deployment exponentially using\
              \ the following formula: <code>G*(2^N)</code>. In this formula, <code>G</code>\
              \ is the growth factor specified by the user and <code>N</code> is the\
              \ number of steps until the configuration is deployed to all targets.\
              \ For example, if you specify a growth factor of 2, then the system\
              \ rolls out the configuration as follows:</p> <p> <code>2*(2^0)</code>\
              \ </p> <p> <code>2*(2^1)</code> </p> <p> <code>2*(2^2)</code> </p> <p>Expressed\
              \ numerically, the deployment rolls out as follows: 2% of the targets,\
              \ 4% of the targets, 8% of the targets, and continues until the configuration\
              \ has been deployed to all targets.</p>"
        ReplicateTo:
          allOf:
          - $ref: '#/components/schemas/ReplicateTo'
          - description: Save the deployment strategy to a Systems Manager (SSM) document.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Metadata to assign to the deployment strategy. Tags help\
              \ organize and categorize your AppConfig resources. Each tag consists\
              \ of a key and an optional value, both of which you define."
      required:
      - DeploymentDurationInMinutes
      - GrowthFactor
      - Name
      title: CreateDeploymentStrategyRequest
      type: object
    MonitorList:
      items:
        $ref: '#/components/schemas/Monitor'
      maxItems: 5
      minItems: 0
      type: array
    CreateEnvironmentRequest:
      example:
        Description: ""
        Monitors: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the environment.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment.
        Monitors:
          allOf:
          - $ref: '#/components/schemas/MonitorList'
          - description: Amazon CloudWatch alarms to monitor during the deployment
              process.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Metadata to assign to the environment. Tags help organize\
              \ and categorize your AppConfig resources. Each tag consists of a key\
              \ and an optional value, both of which you define."
      required:
      - Name
      title: CreateEnvironmentRequest
      type: object
    CreateExtensionAssociationRequest:
      example:
        ResourceIdentifier: ""
        Parameters: ""
        ExtensionIdentifier: ""
        ExtensionVersionNumber: ""
        Tags: ""
      properties:
        ExtensionIdentifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: "The name, the ID, or the Amazon Resource Name (ARN) of the\
              \ extension."
        ExtensionVersionNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The version number of the extension. If not specified, AppConfig\
              \ uses the maximum version of the extension."
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: "The ARN of an application, configuration profile, or environment."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterValueMap'
          - description: The parameter names and values defined in the extensions.
              Extension parameters marked <code>Required</code> must be entered for
              this field.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Adds one or more tags for the specified extension association.\
              \ Tags are metadata that help you categorize resources in different\
              \ ways, for example, by purpose, owner, or environment. Each tag consists\
              \ of a key and an optional value, both of which you define. "
      required:
      - ExtensionIdentifier
      - ResourceIdentifier
      title: CreateExtensionAssociationRequest
      type: object
    ParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/Parameter'
      maxProperties: 5
      minProperties: 1
      type: object
    CreateExtensionRequest:
      example:
        Description: ""
        Parameters: ""
        Actions: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the extension. Each extension name in your account
              must be unique. Extension versions use the same name.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: Information about the extension.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionsMap'
          - description: The actions defined in the extension.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          - description: "The parameters accepted by the extension. You specify parameter\
              \ values when you associate the extension to an AppConfig resource by\
              \ using the <code>CreateExtensionAssociation</code> API action. For\
              \ Lambda extension actions, these parameters are included in the Lambda\
              \ request object."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Adds one or more tags for the specified extension. Tags\
              \ are metadata that help you categorize resources in different ways,\
              \ for example, by purpose, owner, or environment. Each tag consists\
              \ of a key and an optional value, both of which you define. "
      required:
      - Actions
      - Name
      title: CreateExtensionRequest
      type: object
    StringWithLengthBetween1And255:
      maxLength: 255
      minLength: 1
      type: string
    VersionLabel:
      maxLength: 64
      minLength: 1
      pattern: ".*[^0-9].*"
      type: string
    CreateHostedConfigurationVersionRequest:
      example:
        Content: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: The content of the configuration or the configuration data.
      required:
      - Content
      title: CreateHostedConfigurationVersionRequest
      type: object
    DeleteApplicationRequest:
      properties: {}
      title: DeleteApplicationRequest
      type: object
    DeleteConfigurationProfileRequest:
      properties: {}
      title: DeleteConfigurationProfileRequest
      type: object
    DeploymentStrategyId:
      pattern: "(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)"
      type: string
    DeleteDeploymentStrategyRequest:
      properties: {}
      title: DeleteDeploymentStrategyRequest
      type: object
    DeleteEnvironmentRequest:
      properties: {}
      title: DeleteEnvironmentRequest
      type: object
    DeleteExtensionAssociationRequest:
      properties: {}
      title: DeleteExtensionAssociationRequest
      type: object
    DeleteExtensionRequest:
      properties: {}
      title: DeleteExtensionRequest
      type: object
    DeleteHostedConfigurationVersionRequest:
      properties: {}
      title: DeleteHostedConfigurationVersionRequest
      type: object
    Percentage:
      format: float
      maximum: 100
      minimum: 1
      type: number
    DeploymentState:
      enum:
      - BAKING
      - VALIDATING
      - DEPLOYING
      - COMPLETE
      - ROLLING_BACK
      - ROLLED_BACK
      type: string
    DeploymentEvents:
      items:
        $ref: '#/components/schemas/DeploymentEvent'
      type: array
    Iso8601DateTime:
      format: date-time
      type: string
    DeploymentEventType:
      enum:
      - PERCENTAGE_UPDATED
      - ROLLBACK_STARTED
      - ROLLBACK_COMPLETED
      - BAKE_TIME_STARTED
      - DEPLOYMENT_STARTED
      - DEPLOYMENT_COMPLETED
      type: string
    TriggeredBy:
      enum:
      - USER
      - APPCONFIG
      - CLOUDWATCH_ALARM
      - INTERNAL_ERROR
      type: string
    DeploymentEvent:
      description: An object that describes a deployment event.
      properties:
        EventType:
          allOf:
          - $ref: '#/components/schemas/DeploymentEventType'
          - description: "The type of deployment event. Deployment event types include\
              \ the start, stop, or completion of a deployment; a percentage update;\
              \ the start or stop of a bake period; and the start or completion of\
              \ a rollback."
        TriggeredBy:
          allOf:
          - $ref: '#/components/schemas/TriggeredBy'
          - description: "The entity that triggered the deployment event. Events can\
              \ be triggered by a user, AppConfig, an Amazon CloudWatch alarm, or\
              \ an internal error."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: "A description of the deployment event. Descriptions include,\
              \ but are not limited to, the user account or the Amazon CloudWatch\
              \ alarm ARN that initiated a rollback, the percentage of hosts that\
              \ received the deployment, or in the case of an internal error, a recommendation\
              \ to attempt a new deployment."
        ActionInvocations:
          allOf:
          - $ref: '#/components/schemas/ActionInvocations'
          - description: The list of extensions that were invoked as part of the deployment.
        OccurredAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601DateTime'
          - description: The date and time the event occurred.
      type: object
    DeploymentSummary:
      description: Information about the deployment.
      properties:
        DeploymentNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The sequence number of the deployment.
        ConfigurationName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the configuration.
        ConfigurationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the configuration.
        DeploymentDurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: Total amount of time the deployment lasted.
        GrowthType:
          allOf:
          - $ref: '#/components/schemas/GrowthType'
          - description: The algorithm used to define how percentage grows over time.
        GrowthFactor:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of targets to receive a deployed configuration
              during each interval.
        FinalBakeTimeInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: The amount of time that AppConfig monitors for alarms before
              considering the deployment to be complete and no longer eligible for
              automatic rollback.
        State:
          allOf:
          - $ref: '#/components/schemas/DeploymentState'
          - description: The state of the deployment.
        PercentageComplete:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of targets for which the deployment is available.
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601DateTime'
          - description: Time the deployment started.
        CompletedAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601DateTime'
          - description: Time the deployment completed.
      type: object
    DeploymentList:
      items:
        $ref: '#/components/schemas/DeploymentSummary'
      type: array
    DeploymentStrategyList:
      items:
        $ref: '#/components/schemas/DeploymentStrategy'
      type: array
    EnvironmentState:
      enum:
      - READY_FOR_DEPLOYMENT
      - DEPLOYING
      - ROLLING_BACK
      - ROLLED_BACK
      type: string
    EnvironmentList:
      items:
        $ref: '#/components/schemas/Environment'
      type: array
    ExtensionAssociationSummary:
      description: "Information about an association between an extension and an AppConfig\
        \ resource such as an application, environment, or configuration profile.\
        \ Call <code>GetExtensionAssociation</code> to get more information about\
        \ an association."
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The extension association ID. This ID is used to call other
              <code>ExtensionAssociation</code> API actions such as <code>GetExtensionAssociation</code>
              or <code>DeleteExtensionAssociation</code>.
        ExtensionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The system-generated Amazon Resource Name (ARN) for the extension.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARNs of applications, configuration profiles, or environments\
              \ defined in the association."
      type: object
    ExtensionAssociationSummaries:
      items:
        $ref: '#/components/schemas/ExtensionAssociationSummary'
      type: array
    ExtensionSummary:
      description: Information about an extension. Call <code>GetExtension</code>
        to get more information about an extension.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The system-generated ID of the extension.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The extension name.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The extension version number.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The system-generated Amazon Resource Name (ARN) for the extension.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: Information about the extension.
      type: object
    ExtensionSummaries:
      items:
        $ref: '#/components/schemas/ExtensionSummary'
      type: array
    GetApplicationRequest:
      properties: {}
      title: GetApplicationRequest
      type: object
    GetConfigurationProfileRequest:
      properties: {}
      title: GetConfigurationProfileRequest
      type: object
    StringWithLengthBetween1And64:
      maxLength: 64
      minLength: 1
      type: string
    GetConfigurationRequest:
      properties: {}
      title: GetConfigurationRequest
      type: object
    GetDeploymentRequest:
      properties: {}
      title: GetDeploymentRequest
      type: object
    GetDeploymentStrategyRequest:
      properties: {}
      title: GetDeploymentStrategyRequest
      type: object
    GetEnvironmentRequest:
      properties: {}
      title: GetEnvironmentRequest
      type: object
    GetExtensionAssociationRequest:
      properties: {}
      title: GetExtensionAssociationRequest
      type: object
    GetExtensionRequest:
      properties: {}
      title: GetExtensionRequest
      type: object
    GetHostedConfigurationVersionRequest:
      properties: {}
      title: GetHostedConfigurationVersionRequest
      type: object
    HostedConfigurationVersionSummary:
      description: Information about the configuration.
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The application ID.
        ConfigurationProfileId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The configuration profile ID.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The configuration version.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the configuration.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/StringWithLengthBetween1And255'
          - description: "A standard MIME type describing the format of the configuration\
              \ content. For more information, see <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\"\
              >Content-Type</a>."
        VersionLabel:
          allOf:
          - $ref: '#/components/schemas/VersionLabel'
          - description: A user-defined label for an AppConfig hosted configuration
              version.
      type: object
    HostedConfigurationVersionSummaryList:
      items:
        $ref: '#/components/schemas/HostedConfigurationVersionSummary'
      type: array
    MaxResults:
      maximum: 50
      minimum: 1
      type: integer
    ListApplicationsRequest:
      properties: {}
      title: ListApplicationsRequest
      type: object
    ListConfigurationProfilesRequest:
      properties: {}
      title: ListConfigurationProfilesRequest
      type: object
    ListDeploymentStrategiesRequest:
      properties: {}
      title: ListDeploymentStrategiesRequest
      type: object
    ListDeploymentsRequest:
      properties: {}
      title: ListDeploymentsRequest
      type: object
    ListEnvironmentsRequest:
      properties: {}
      title: ListEnvironmentsRequest
      type: object
    ListExtensionAssociationsRequest:
      properties: {}
      title: ListExtensionAssociationsRequest
      type: object
    QueryName:
      maxLength: 64
      minLength: 1
      type: string
    ListExtensionsRequest:
      properties: {}
      title: ListExtensionsRequest
      type: object
    ListHostedConfigurationVersionsRequest:
      properties: {}
      title: ListHostedConfigurationVersionsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    StartDeploymentRequest:
      example:
        DeploymentStrategyId: ""
        ConfigurationProfileId: ""
        KmsKeyIdentifier: ""
        Description: ""
        ConfigurationVersion: ""
        Tags: ""
      properties:
        DeploymentStrategyId:
          allOf:
          - $ref: '#/components/schemas/DeploymentStrategyId'
          - description: The deployment strategy ID.
        ConfigurationProfileId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The configuration profile ID.
        ConfigurationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "The configuration version to deploy. If deploying an AppConfig\
              \ hosted configuration version, you can specify either the version number\
              \ or version label."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the deployment.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "Metadata to assign to the deployment. Tags help organize\
              \ and categorize your AppConfig resources. Each tag consists of a key\
              \ and an optional value, both of which you define."
        KmsKeyIdentifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: "The KMS key identifier (key ID, key alias, or key ARN).\
              \ AppConfig uses this ID to encrypt the configuration data using a customer\
              \ managed key. "
      required:
      - ConfigurationProfileId
      - ConfigurationVersion
      - DeploymentStrategyId
      title: StartDeploymentRequest
      type: object
    StopDeploymentRequest:
      properties: {}
      title: StopDeploymentRequest
      type: object
    StringWithLengthBetween0And32768:
      format: password
      maxLength: 32768
      minLength: 0
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The key-value string map. The valid character set is [a-zA-Z+-=._:/].\
              \ The tag key can be up to 128 characters and must not start with <code>aws:</code>.\
              \ The tag value can be up to 256 characters."
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateApplicationRequest:
      example:
        Description: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the application.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the application.
      title: UpdateApplicationRequest
      type: object
    UpdateConfigurationProfileRequest:
      example:
        Description: ""
        Validators: ""
        RetrievalRoleArn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the configuration profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the configuration profile.
        RetrievalRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of an IAM role with permission to access the configuration
              at the specified <code>LocationUri</code>.
        Validators:
          allOf:
          - $ref: '#/components/schemas/ValidatorList'
          - description: A list of methods for validating the configuration.
      title: UpdateConfigurationProfileRequest
      type: object
    UpdateDeploymentStrategyRequest:
      example:
        GrowthType: ""
        Description: ""
        DeploymentDurationInMinutes: ""
        GrowthFactor: ""
        FinalBakeTimeInMinutes: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the deployment strategy.
        DeploymentDurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: Total amount of time for a deployment to last.
        FinalBakeTimeInMinutes:
          allOf:
          - $ref: '#/components/schemas/MinutesBetween0And24Hours'
          - description: The amount of time that AppConfig monitors for alarms before
              considering the deployment to be complete and no longer eligible for
              automatic rollback.
        GrowthFactor:
          allOf:
          - $ref: '#/components/schemas/GrowthFactor'
          - description: The percentage of targets to receive a deployed configuration
              during each interval.
        GrowthType:
          allOf:
          - $ref: '#/components/schemas/GrowthType'
          - description: "<p>The algorithm used to define how percentage grows over\
              \ time. AppConfig supports the following growth types:</p> <p> <b>Linear</b>:\
              \ For this type, AppConfig processes the deployment by increments of\
              \ the growth factor evenly distributed over the deployment time. For\
              \ example, a linear deployment that uses a growth factor of 20 initially\
              \ makes the configuration available to 20 percent of the targets. After\
              \ 1/5th of the deployment time has passed, the system updates the percentage\
              \ to 40 percent. This continues until 100% of the targets are set to\
              \ receive the deployed configuration.</p> <p> <b>Exponential</b>: For\
              \ this type, AppConfig processes the deployment exponentially using\
              \ the following formula: <code>G*(2^N)</code>. In this formula, <code>G</code>\
              \ is the growth factor specified by the user and <code>N</code> is the\
              \ number of steps until the configuration is deployed to all targets.\
              \ For example, if you specify a growth factor of 2, then the system\
              \ rolls out the configuration as follows:</p> <p> <code>2*(2^0)</code>\
              \ </p> <p> <code>2*(2^1)</code> </p> <p> <code>2*(2^2)</code> </p> <p>Expressed\
              \ numerically, the deployment rolls out as follows: 2% of the targets,\
              \ 4% of the targets, 8% of the targets, and continues until the configuration\
              \ has been deployed to all targets.</p>"
      title: UpdateDeploymentStrategyRequest
      type: object
    UpdateEnvironmentRequest:
      example:
        Description: ""
        Monitors: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the environment.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the environment.
        Monitors:
          allOf:
          - $ref: '#/components/schemas/MonitorList'
          - description: Amazon CloudWatch alarms to monitor during the deployment
              process.
      title: UpdateEnvironmentRequest
      type: object
    UpdateExtensionAssociationRequest:
      example:
        Parameters: ""
      properties:
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterValueMap'
          - description: The parameter names and values defined in the extension.
      title: UpdateExtensionAssociationRequest
      type: object
    UpdateExtensionRequest:
      example:
        Description: ""
        Parameters: ""
        Actions: ""
        VersionNumber: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: Information about the extension.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionsMap'
          - description: The actions defined in the extension.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          - description: One or more parameters for the actions called by the extension.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The extension version number.
      title: UpdateExtensionRequest
      type: object
    ValidateConfigurationRequest:
      properties: {}
      title: ValidateConfigurationRequest
      type: object
    ValidatorType:
      enum:
      - JSON_SCHEMA
      - LAMBDA
      type: string
    CreateApplication_request:
      properties:
        Name:
          description: A name for the application.
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: A description of the application.
          maxLength: 1024
          minLength: 0
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Metadata to assign to the application. Tags help organize\
            \ and categorize your AppConfig resources. Each tag consists of a key\
            \ and an optional value, both of which you define."
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - Name
      type: object
    CreateConfigurationProfile_request:
      properties:
        Name:
          description: A name for the configuration profile.
          maxLength: 128
          minLength: 1
          type: string
        Description:
          description: A description of the configuration profile.
          maxLength: 1024
          minLength: 0
          type: string
        LocationUri:
          description: "<p>A URI to locate the configuration. You can specify the\
            \ following:</p> <ul> <li> <p>For the AppConfig hosted configuration store\
            \ and for feature flags, specify <code>hosted</code>.</p> </li> <li> <p>For\
            \ an Amazon Web Services Systems Manager Parameter Store parameter, specify\
            \ either the parameter name in the format <code>ssm-parameter://&lt;parameter\
            \ name&gt;</code> or the ARN.</p> </li> <li> <p>For an Secrets Manager\
            \ secret, specify the URI in the following format: <code>secrets-manager</code>://&lt;secret\
            \ name&gt;.</p> </li> <li> <p>For an Amazon S3 object, specify the URI\
            \ in the following format: <code>s3://&lt;bucket&gt;/&lt;objectKey&gt;\
            \ </code>. Here is an example: <code>s3://my-bucket/my-app/us-east-1/my-config.json</code>\
            \ </p> </li> <li> <p>For an SSM document, specify either the document\
            \ name in the format <code>ssm-document://&lt;document name&gt;</code>\
            \ or the Amazon Resource Name (ARN).</p> </li> </ul>"
          maxLength: 2048
          minLength: 1
          type: string
        RetrievalRoleArn:
          description: <p>The ARN of an IAM role with permission to access the configuration
            at the specified <code>LocationUri</code>.</p> <important> <p>A retrieval
            role ARN is not required for configurations stored in the AppConfig hosted
            configuration store. It is required for all other sources that store your
            configuration. </p> </important>
          maxLength: 2048
          minLength: 20
          pattern: "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\\
            d{12}:role[/].*)$"
          type: string
        Validators:
          description: A list of methods for validating the configuration.
          items:
            $ref: '#/components/schemas/Validator'
          maxItems: 2
          minItems: 0
          type: array
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Metadata to assign to the configuration profile. Tags help\
            \ organize and categorize your AppConfig resources. Each tag consists\
            \ of a key and an optional value, both of which you define."
          maxProperties: 50
          minProperties: 0
          type: object
        Type:
          description: "<p>The type of configurations contained in the profile. AppConfig\
            \ supports <code>feature flags</code> and <code>freeform</code> configurations.\
            \ We recommend you create feature flag configurations to enable or disable\
            \ new features and freeform configurations to distribute configurations\
            \ to an application. When calling this API, enter one of the following\
            \ values for <code>Type</code>:</p> <p> <code>AWS.AppConfig.FeatureFlags</code>\
            \ </p> <p> <code>AWS.Freeform</code> </p>"
          pattern: "^[a-zA-Z\\.]+"
          type: string
      required:
      - LocationUri
      - Name
      type: object
    CreateDeploymentStrategy_request:
      properties:
        Name:
          description: A name for the deployment strategy.
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: A description of the deployment strategy.
          maxLength: 1024
          minLength: 0
          type: string
        DeploymentDurationInMinutes:
          description: Total amount of time for a deployment to last.
          maximum: 1440
          minimum: 0
          type: integer
        FinalBakeTimeInMinutes:
          description: "Specifies the amount of time AppConfig monitors for Amazon\
            \ CloudWatch alarms after the configuration has been deployed to 100%\
            \ of its targets, before considering the deployment to be complete. If\
            \ an alarm is triggered during this time, AppConfig rolls back the deployment.\
            \ You must configure permissions for AppConfig to roll back based on CloudWatch\
            \ alarms. For more information, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/getting-started-with-appconfig-cloudwatch-alarms-permissions.html\"\
            >Configuring permissions for rollback based on Amazon CloudWatch alarms</a>\
            \ in the <i>AppConfig User Guide</i>."
          maximum: 1440
          minimum: 0
          type: integer
        GrowthFactor:
          description: The percentage of targets to receive a deployed configuration
            during each interval.
          format: float
          maximum: 100
          minimum: 1
          type: number
        GrowthType:
          description: "<p>The algorithm used to define how percentage grows over\
            \ time. AppConfig supports the following growth types:</p> <p> <b>Linear</b>:\
            \ For this type, AppConfig processes the deployment by dividing the total\
            \ number of targets by the value specified for <code>Step percentage</code>.\
            \ For example, a linear deployment that uses a <code>Step percentage</code>\
            \ of 10 deploys the configuration to 10 percent of the hosts. After those\
            \ deployments are complete, the system deploys the configuration to the\
            \ next 10 percent. This continues until 100% of the targets have successfully\
            \ received the configuration.</p> <p> <b>Exponential</b>: For this type,\
            \ AppConfig processes the deployment exponentially using the following\
            \ formula: <code>G*(2^N)</code>. In this formula, <code>G</code> is the\
            \ growth factor specified by the user and <code>N</code> is the number\
            \ of steps until the configuration is deployed to all targets. For example,\
            \ if you specify a growth factor of 2, then the system rolls out the configuration\
            \ as follows:</p> <p> <code>2*(2^0)</code> </p> <p> <code>2*(2^1)</code>\
            \ </p> <p> <code>2*(2^2)</code> </p> <p>Expressed numerically, the deployment\
            \ rolls out as follows: 2% of the targets, 4% of the targets, 8% of the\
            \ targets, and continues until the configuration has been deployed to\
            \ all targets.</p>"
          enum:
          - LINEAR
          - EXPONENTIAL
          type: string
        ReplicateTo:
          description: Save the deployment strategy to a Systems Manager (SSM) document.
          enum:
          - NONE
          - SSM_DOCUMENT
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Metadata to assign to the deployment strategy. Tags help organize\
            \ and categorize your AppConfig resources. Each tag consists of a key\
            \ and an optional value, both of which you define."
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - DeploymentDurationInMinutes
      - GrowthFactor
      - Name
      type: object
    CreateEnvironment_request:
      properties:
        Name:
          description: A name for the environment.
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: A description of the environment.
          maxLength: 1024
          minLength: 0
          type: string
        Monitors:
          description: Amazon CloudWatch alarms to monitor during the deployment process.
          items:
            $ref: '#/components/schemas/Monitor'
          maxItems: 5
          minItems: 0
          type: array
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Metadata to assign to the environment. Tags help organize\
            \ and categorize your AppConfig resources. Each tag consists of a key\
            \ and an optional value, both of which you define."
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - Name
      type: object
    CreateExtension_request:
      properties:
        Name:
          description: A name for the extension. Each extension name in your account
            must be unique. Extension versions use the same name.
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: Information about the extension.
          maxLength: 1024
          minLength: 0
          type: string
        Actions:
          additionalProperties:
            $ref: '#/components/schemas/ActionList'
          description: The actions defined in the extension.
          maxProperties: 5
          minProperties: 1
          type: object
        Parameters:
          additionalProperties:
            $ref: '#/components/schemas/Parameter'
          description: "The parameters accepted by the extension. You specify parameter\
            \ values when you associate the extension to an AppConfig resource by\
            \ using the <code>CreateExtensionAssociation</code> API action. For Lambda\
            \ extension actions, these parameters are included in the Lambda request\
            \ object."
          maxProperties: 5
          minProperties: 1
          type: object
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Adds one or more tags for the specified extension. Tags are\
            \ metadata that help you categorize resources in different ways, for example,\
            \ by purpose, owner, or environment. Each tag consists of a key and an\
            \ optional value, both of which you define. "
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - Actions
      - Name
      type: object
    CreateExtensionAssociation_request:
      properties:
        ExtensionIdentifier:
          description: "The name, the ID, or the Amazon Resource Name (ARN) of the\
            \ extension."
          maxLength: 2048
          minLength: 1
          type: string
        ExtensionVersionNumber:
          description: "The version number of the extension. If not specified, AppConfig\
            \ uses the maximum version of the extension."
          type: integer
        ResourceIdentifier:
          description: "The ARN of an application, configuration profile, or environment."
          maxLength: 2048
          minLength: 1
          type: string
        Parameters:
          additionalProperties:
            $ref: '#/components/schemas/StringWithLengthBetween1And2048'
          description: The parameter names and values defined in the extensions. Extension
            parameters marked <code>Required</code> must be entered for this field.
          maxProperties: 5
          minProperties: 0
          type: object
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Adds one or more tags for the specified extension association.\
            \ Tags are metadata that help you categorize resources in different ways,\
            \ for example, by purpose, owner, or environment. Each tag consists of\
            \ a key and an optional value, both of which you define. "
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - ExtensionIdentifier
      - ResourceIdentifier
      type: object
    CreateHostedConfigurationVersion_request:
      properties:
        Content:
          description: The content of the configuration or the configuration data.
          format: password
          type: string
      required:
      - Content
      type: object
    UpdateApplication_request:
      properties:
        Name:
          description: The name of the application.
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: A description of the application.
          maxLength: 1024
          minLength: 0
          type: string
      type: object
    UpdateConfigurationProfile_request:
      properties:
        Name:
          description: The name of the configuration profile.
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: A description of the configuration profile.
          maxLength: 1024
          minLength: 0
          type: string
        RetrievalRoleArn:
          description: The ARN of an IAM role with permission to access the configuration
            at the specified <code>LocationUri</code>.
          maxLength: 2048
          minLength: 20
          pattern: "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\\
            d{12}:role[/].*)$"
          type: string
        Validators:
          description: A list of methods for validating the configuration.
          items:
            $ref: '#/components/schemas/Validator'
          maxItems: 2
          minItems: 0
          type: array
      type: object
    UpdateEnvironment_request:
      properties:
        Name:
          description: The name of the environment.
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: A description of the environment.
          maxLength: 1024
          minLength: 0
          type: string
        Monitors:
          description: Amazon CloudWatch alarms to monitor during the deployment process.
          items:
            $ref: '#/components/schemas/Monitor'
          maxItems: 5
          minItems: 0
          type: array
      type: object
    UpdateExtension_request:
      properties:
        Description:
          description: Information about the extension.
          maxLength: 1024
          minLength: 0
          type: string
        Actions:
          additionalProperties:
            $ref: '#/components/schemas/ActionList'
          description: The actions defined in the extension.
          maxProperties: 5
          minProperties: 1
          type: object
        Parameters:
          additionalProperties:
            $ref: '#/components/schemas/Parameter'
          description: One or more parameters for the actions called by the extension.
          maxProperties: 5
          minProperties: 1
          type: object
        VersionNumber:
          description: The extension version number.
          type: integer
      type: object
    UpdateExtensionAssociation_request:
      properties:
        Parameters:
          additionalProperties:
            $ref: '#/components/schemas/StringWithLengthBetween1And2048'
          description: The parameter names and values defined in the extension.
          maxProperties: 5
          minProperties: 0
          type: object
      type: object
    UpdateDeploymentStrategy_request:
      properties:
        Description:
          description: A description of the deployment strategy.
          maxLength: 1024
          minLength: 0
          type: string
        DeploymentDurationInMinutes:
          description: Total amount of time for a deployment to last.
          maximum: 1440
          minimum: 0
          type: integer
        FinalBakeTimeInMinutes:
          description: The amount of time that AppConfig monitors for alarms before
            considering the deployment to be complete and no longer eligible for automatic
            rollback.
          maximum: 1440
          minimum: 0
          type: integer
        GrowthFactor:
          description: The percentage of targets to receive a deployed configuration
            during each interval.
          format: float
          maximum: 100
          minimum: 1
          type: number
        GrowthType:
          description: "<p>The algorithm used to define how percentage grows over\
            \ time. AppConfig supports the following growth types:</p> <p> <b>Linear</b>:\
            \ For this type, AppConfig processes the deployment by increments of the\
            \ growth factor evenly distributed over the deployment time. For example,\
            \ a linear deployment that uses a growth factor of 20 initially makes\
            \ the configuration available to 20 percent of the targets. After 1/5th\
            \ of the deployment time has passed, the system updates the percentage\
            \ to 40 percent. This continues until 100% of the targets are set to receive\
            \ the deployed configuration.</p> <p> <b>Exponential</b>: For this type,\
            \ AppConfig processes the deployment exponentially using the following\
            \ formula: <code>G*(2^N)</code>. In this formula, <code>G</code> is the\
            \ growth factor specified by the user and <code>N</code> is the number\
            \ of steps until the configuration is deployed to all targets. For example,\
            \ if you specify a growth factor of 2, then the system rolls out the configuration\
            \ as follows:</p> <p> <code>2*(2^0)</code> </p> <p> <code>2*(2^1)</code>\
            \ </p> <p> <code>2*(2^2)</code> </p> <p>Expressed numerically, the deployment\
            \ rolls out as follows: 2% of the targets, 4% of the targets, 8% of the\
            \ targets, and continues until the configuration has been deployed to\
            \ all targets.</p>"
          enum:
          - LINEAR
          - EXPONENTIAL
          type: string
      type: object
    StartDeployment_request:
      properties:
        DeploymentStrategyId:
          description: The deployment strategy ID.
          pattern: "(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)"
          type: string
        ConfigurationProfileId:
          description: The configuration profile ID.
          pattern: "[a-z0-9]{4,7}"
          type: string
        ConfigurationVersion:
          description: "The configuration version to deploy. If deploying an AppConfig\
            \ hosted configuration version, you can specify either the version number\
            \ or version label."
          maxLength: 1024
          minLength: 1
          type: string
        Description:
          description: A description of the deployment.
          maxLength: 1024
          minLength: 0
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Metadata to assign to the deployment. Tags help organize and\
            \ categorize your AppConfig resources. Each tag consists of a key and\
            \ an optional value, both of which you define."
          maxProperties: 50
          minProperties: 0
          type: object
        KmsKeyIdentifier:
          description: "The KMS key identifier (key ID, key alias, or key ARN). AppConfig\
            \ uses this ID to encrypt the configuration data using a customer managed\
            \ key. "
          maxLength: 2048
          minLength: 1
          type: string
      required:
      - ConfigurationProfileId
      - ConfigurationVersion
      - DeploymentStrategyId
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The key-value string map. The valid character set is [a-zA-Z+-=._:/].\
            \ The tag key can be up to 128 characters and must not start with <code>aws:</code>.\
            \ The tag value can be up to 256 characters."
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - Tags
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

